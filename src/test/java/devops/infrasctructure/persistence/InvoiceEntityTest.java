package devops.infrasctructure.persistence;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.time.LocalDateTime;

import org.junit.jupiter.api.Test;

import devops.infrastructure.persistence.InvoiceEntity;

class InvoiceEntityTest {
    @Test
    void testInvoiceEntityConstructorAndGetters() {
        // Arrange
        String productName = "Product A";
        String customerNotes = "Customer note for product A";
        double price = 100.0;
        
        // Act
        InvoiceEntity invoiceEntity = new InvoiceEntity(productName, customerNotes, price);

        // Assert
        assertNotNull(invoiceEntity);
        assertEquals(productName, invoiceEntity.getProductName());
        assertEquals(customerNotes, invoiceEntity.getCustomerNotes());
        assertEquals(price, invoiceEntity.getPrice());
        assertNotNull(invoiceEntity.getCreatedAt()); // CreatedAt should not be null
    }

    @Test
    void testSettersAndGetters() {
        // Arrange
        InvoiceEntity invoiceEntity = new InvoiceEntity();
        
        // Act
        String productName = "Product B";
        String customerNotes = "Customer note for product B";
        double price = 200.0;
        
        invoiceEntity.setProductName(productName);
        invoiceEntity.setCustomerNotes(customerNotes);
        invoiceEntity.setPrice(price);

        // Assert
        assertEquals(productName, invoiceEntity.getProductName());
        assertEquals(customerNotes, invoiceEntity.getCustomerNotes());
        assertEquals(price, invoiceEntity.getPrice());
    }

    @Test
    void testInvoiceEntityId() {
        // Arrange
        InvoiceEntity invoiceEntity = new InvoiceEntity("Product C", "Customer note for product C", 300.0);

        // Act
        Long id = invoiceEntity.getId();

        // Assert
        // Since ID is generated by the database and will be null initially, we are checking if the ID is indeed null
        assertNull(id, "ID should be null before persisting the entity");
    }

    @Test
    void testCreatedAtIsSetToCurrentTime() {
        // Arrange
        InvoiceEntity invoiceEntity = new InvoiceEntity("Product D", "Customer note for product D", 400.0);

        // Act
        LocalDateTime createdAt = invoiceEntity.getCreatedAt();

        // Assert
        assertNotNull(createdAt, "CreatedAt should not be null");
        assertTrue(createdAt.isBefore(LocalDateTime.now().plusSeconds(1)), "CreatedAt should be set to a time close to the current time");
    }
}
